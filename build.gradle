plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.ben-manes.versions" version "0.21.0"
}

sourceCompatibility = 1.11

repositories {
    mavenCentral()
    maven {
        url 'http://mrramych-maven.storage.yandexcloud.net/releases/'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

dependencies {
    compile 'com.google.guava:guava:26.0-jre'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.jetbrains:annotations:17.0.0'
    compile 'com.github.mrramych:json:1.1.0'

    testCompile 'org.testng:testng:6.14.3'
    testCompile 'org.mockito:mockito-core:2.+'
    testCompile 'org.assertj:assertj-core:3.11.1'
    testCompile 'com.google.code.gson:gson:2.8.5'
    testCompile 'org.slf4j:slf4j-simple:1.7.25'
}

test {
    useTestNG()
}

publishing {
    publications {
        maven(MavenPublication) {
            group 'com.github.mrramych'
            artifactId 'jsonrpc'
            version '2.1'

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            System.setProperty("org.gradle.s3.endpoint", "https://storage.yandexcloud.net")
            def releasesRepoUrl = "s3://mrramych-maven/releases"
            def snapshotsRepoUrl = "s3://mrramych-maven/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(AwsCredentials) {
                accessKey System.getProperty("awsCredentials.AWSAccessKeyId")
                secretKey System.getProperty("awsCredentials.AWSSecretKey")
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) { it.dependsOn test }

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
